name: CD
on:
  push:
    tags: ["v*"]
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.github_token }}
          script: |
            const tag = process.env.GITHUB_REF.split('/').slice(-1)[0]
            const major_version="$(cut -d '.' -f 1 <<< "$tag")"
            try {
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: tag,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: tag,
              })
            }
            catch (error) {
              core.setFailed(error.message)
            }
            git tag -fa ${major_version} -m "Map ${major_version} to ${tag}"
            git push origin ${major_version} --force
  notify:
    needs: [release]
    name: Notify
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: andrewscwei/telegram-action@v1
        with:
          success: ${{ needs.release.result == 'success' }}
          cancelled: ${{ needs.release.result == 'cancelled' }}
          bot-token: ${{ secrets.TELEGRAM_DEVOPS_BOT_TOKEN }}
          chat-id: ${{ secrets.TELEGRAM_DEVOPS_CHAT_ID }}
